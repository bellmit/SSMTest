package cn.gtmap.msurveyplat.promanage.service.impl;

import cn.gtmap.msurveyplat.common.core.support.mybatis.mapper.EntityMapper;
import cn.gtmap.msurveyplat.common.core.support.mybatis.mapper.Example;
import cn.gtmap.msurveyplat.common.core.support.mybatis.page.repository.Repository;
import cn.gtmap.msurveyplat.common.domain.dchyxmgl.DchyXmglMlk;
import cn.gtmap.msurveyplat.common.util.CommonUtil;
import cn.gtmap.msurveyplat.promanage.core.mapper.DchyXmglTjfxMapper;
import cn.gtmap.msurveyplat.promanage.service.DchyXmglTjfxService;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author <a href="mailto:zhaobiqiang@gtmap.cn">zhaobiqiang</a>
 * @version 1.0, 2021/4/14
 * @description
 */
@Service
public class DchyXmglTjfxServiceImpl implements DchyXmglTjfxService {


    @Autowired
    private DchyXmglTjfxMapper dchyXmglTjfxMapper;

    @Autowired
    private EntityMapper entityMapper;

    @Autowired
    private Repository repository;

    @Override
    public List<DchyXmglMlk> getChdwList() {
        Example example = new Example(DchyXmglMlk.class);
        return entityMapper.selectByExample(example);
    }

    @Override
    public List<Map> getXmsl(Map<String, Object> data) {
        Map<String, Object> paramMap = new HashMap<>();
        String kssj = CommonUtil.ternaryOperator(data.get("kssj"));
        String jssj = CommonUtil.ternaryOperator(data.get("jssj"));
        String chdwmc = CommonUtil.ternaryOperator(data.get("chdwmc"));
        if (StringUtils.isNotBlank(kssj)) {
            paramMap.put("kssj", kssj);
        }
        if (StringUtils.isNotBlank(jssj)) {
            paramMap.put("jssj", jssj);
        }
        if (StringUtils.isNotBlank(chdwmc)) {
            paramMap.put("chdwmc", chdwmc);
        }
        return dchyXmglTjfxMapper.getXmsl(paramMap);
    }

    @Override
    public Page<Map> getXmbajlByPage(Map<String, Object> data) {
        Map<String, Object> paramMap = new HashMap<>();
        int page = Integer.parseInt(data.get("page") != null ? data.get("page").toString() : "1");
        int pageSize = Integer.parseInt(data.get("pageSize") != null ? data.get("size").toString() : "10");
        String kssj = CommonUtil.ternaryOperator(data.get("kssj"));
        String jssj = CommonUtil.ternaryOperator(data.get("jssj"));
        String chdwmc = CommonUtil.ternaryOperator(data.get("chdwmc"));
        if (StringUtils.isNotBlank(kssj)) {
            paramMap.put("kssj", kssj);
        }
        if (StringUtils.isNotBlank(jssj)) {
            paramMap.put("jssj", jssj);
        }
        if (StringUtils.isNotBlank(chdwmc)) {
            paramMap.put("chdwmc", chdwmc);
        }
        return repository.selectPaging("getXmbajlByPage", paramMap, page - 1, pageSize);
    }

    @Override
    public List<Map> getXmslByqx(Map<String, Object> data) {
        Map<String, Object> paramMap = new HashMap<>();
        String kssj = CommonUtil.ternaryOperator(data.get("kssj"));
        String jssj = CommonUtil.ternaryOperator(data.get("jssj"));
        if (StringUtils.isNotBlank(kssj)) {
            paramMap.put("kssj", kssj);
        }
        if (StringUtils.isNotBlank(jssj)) {
            paramMap.put("jssj", jssj);
        }
        return dchyXmglTjfxMapper.getXmslByQx(paramMap);
    }

    @Override
    public List<Map> getXmWtfsByQx(Map<String, Object> data) {
        Map<String, Object> paramMap = new HashMap<>();
        String kssj = CommonUtil.ternaryOperator(data.get("kssj"));
        String jssj = CommonUtil.ternaryOperator(data.get("jssj"));
        if (StringUtils.isNotBlank(kssj)) {
            paramMap.put("kssj", kssj);
        }
        if (StringUtils.isNotBlank(jssj)) {
            paramMap.put("jssj", jssj);
        }
        return dchyXmglTjfxMapper.getXmwtfsByQx(paramMap);
    }
}
